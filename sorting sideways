#!/usr/bin/env python3

'''Prints number of stars (adjacent or vertical white pixels)'''

import sys

def dfs(row, col, grid):
    stack = [(row, col)]
    dirs = [(1, 0), (0, 1), (-1, 0), (0, -1)]
    visited = set()
    while stack:
        r, c = stack.pop()
        grid[r][c] = 0  # - get rid of this pixel

        for dir in dirs:
            new_x, new_y = r + dir[0], c + dir[1]
            if new_x >= 0 and new_x <= len(grid) - 1 and new_y >= 0 and new_y <= len(grid[0]) - 1:  # - must make sure within bounds first
                if grid[new_x][new_y] == "-":
                    if (new_x, new_y) not in visited:
                        stack.append((new_x, new_y))

if __name__ == '__main__':
    tmp = [s.strip() for s in sys.stdin.read().split()]
    pix = tmp[2:]
    grid = []
    for t in pix:
        a = []
        for l in t:
            a.append(l)
        grid.append(a)

    if not grid:
        print(0)

    count = 0
    for row in range(len(grid)):
        for col in range(len(grid[0])):  # ------- O(E)
            if grid[row][col] == "-":  # land  ------------- (I)
                dfs(row, col, grid)  # grid changes # --- O(E+V)
                count += 1
    print(count)
